# Generated by Django 4.2.5 on 2023-09-08 13:40
import ssl
import requests
from django.db import migrations


class TLSAdapter(requests.adapters.HTTPAdapter):
    def init_poolmanager(self, *args, **kwargs):
        ctx = ssl.create_default_context()
        ctx.set_ciphers("DEFAULT@SECLEVEL=1")
        ctx.options |= 0x4   # <-- the key part here, OP_LEGACY_SERVER_CONNECT
        kwargs["ssl_context"] = ctx
        return super(TLSAdapter, self).init_poolmanager(*args, **kwargs)


def populate_address(apps, schema_editor):
    Pais = apps.get_model("endereco", "Pais")
    Estado = apps.get_model("endereco", "Estado")
    Cidade = apps.get_model("endereco", "Cidade")
    with requests.session() as s:
        s.mount("https://", TLSAdapter())
        paises = s.get('https://servicodados.ibge.gov.br/api/v1/localidades/paises').json()
        for pais in paises:
            Pais.objects.create(id=pais['id']['M49'], nome=pais['nome'], sigla=pais['id']['ISO-ALPHA-3'])
        estados = s.get(f'https://servicodados.ibge.gov.br/api/v1/localidades/estados').json()
        for estado in estados:
            Estado.objects.create(id=estado['id'], nome=estado['nome'], sigla=estado['sigla'], pais_id=76)
            cidades = s.get(
                f'https://servicodados.ibge.gov.br/api/v1/localidades/estados/{estado["id"]}/municipios').json()
            for cidade in cidades:
                Cidade.objects.create(id=cidade['id'], nome=cidade['nome'],
                                    estado_id=cidade['microrregiao']['mesorregiao']['UF']['id'])


class Migration(migrations.Migration):
    dependencies = [
        ('endereco', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_address, reverse_code=migrations.RunPython.noop),

    ]


